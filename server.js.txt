// server.js
const express = require('express');
const fetch = global.fetch || require('node-fetch'); // Node 18+ has global fetch; node-fetch fallback if needed
const app = express();
app.use(express.json());

const PORT = process.env.PORT || 10000;             // Render sets PORT automatically
const VAPI_BEARER_TOKEN = process.env.VAPI_BEARER_TOKEN || 'change_this_token';
const FORWARD_TO_GAS = (process.env.FORWARD_TO_GAS === 'true'); // "true" to enable forwarding
const GAS_URL = process.env.GAS_URL || '';          // Google Apps Script Web App URL (if forwarding)
const GAS_BEARER = process.env.GAS_BEARER || '';    // Bearer token expected by your GAS (optional)

function log(...args) { console.log(new Date().toISOString(), ...args); }

// Main webhook endpoint
app.post('/vapi-webhook', async (req, res) => {
  try {
    const auth = req.get('authorization') || '';
    if (auth !== `Bearer ${VAPI_BEARER_TOKEN}`) {
      log('Unauthorized request, header:', auth);
      return res.status(401).json({ ok: false, error: 'unauthorized' });
    }

    const payload = req.body;
    log('Received Vapi event:', JSON.stringify(payload).slice(0, 1000));

    // Optional: forward to Google Apps Script (to update spreadsheet)
    if (FORWARD_TO_GAS && GAS_URL) {
      try {
        const forwardResp = await fetch(GAS_URL, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            ...(GAS_BEARER ? { 'Authorization': `Bearer ${GAS_BEARER}` } : {})
          },
          body: JSON.stringify(payload),
          // set a reasonable timeout via AbortController in production if needed
        });
        const text = await forwardResp.text();
        log('Forwarded to GAS, status:', forwardResp.status, 'resp:', text.slice(0,200));
      } catch (err) {
        log('Error forwarding to GAS:', err.message);
      }
    }

    // respond to Vapi quickly
    res.json({ ok: true });
  } catch (err) {
    log('Server error:', err);
    res.status(500).json({ ok: false, error: err.message });
  }
});

app.get('/', (req,res) => res.send('Vapi webhook alive'));

app.listen(PORT, () => {
  log(`Webhook server listening on ${PORT}`);
});
